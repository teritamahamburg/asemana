type Query {
    items(sort: [[String!]!] = [["id", "asc"]], search: String, itemEnum: ItemEnum = NORMAL): [Item!]!
    item(id: ID!): Item

    users: [User!]!

    csv(paranoid: Boolean = false): CSV!
}

type Mutation {
    addItem(data: ItemInput!): ItemResult!
    editItem(id: ID!, data: EditItemInput!): Result!
    editItems(ids: [ID!]!, data: EditItemInput!): Result!
    removeItems(ids: [ID!]!): Result! # share parts
    restoreItem(id: ID!): Result! # share parts

    addPart(internalId: ID!, data: PartItemInput!): ItemResult!
    editPart(id: ID!, data: PartItemInput!): Result!
}

scalar Date
scalar Time
scalar DateTime

type User {
    id: ID!
    name: String!
}

type Course {
    id: ID!
    name: String!
}

type Room {
    id: ID!
    number: Int!
}

type Result {
    success: Boolean!
    message: String
}

type ItemResult {
    success: Boolean!
    message: String
    item: Item!
}

type Item {
    id: ID!
    internalId: ID!
    partId: ID!
    seal: String
    name: String!
    code: String!
    amount: Int!
    purchasedAt: Date!
    admin: User!
    course: Course!
    checkedAt: Date
    room: Room!
    disposalAt: Date
    depreciationAt: Date
    createdAt: DateTime!
    deletedAt: DateTime

    histories: [HistoryItem!]!

    parts: [PartItem!]!
}

type HistoryItem {
    id: ID!
    room: Room
    checkedAt: Date
    disposalAt: Date
    depreciationAt: Date
    createdAt: DateTime!
}

type PartItem {
    id: ID!
    internalId: String!
    partId: String!
    name: String!
    room: Room!
    checkedAt: Date
}

type CSV {
    columns: [String!]!
    rows: String!
}

input ItemInput {
    sealImage: Upload
    schoolName: String = "ss"
    name: String!
    code: String!
    amount: Int = 1
    purchasedAt: Date!
    admin: String!
    course: String!
    checkedAt: Date
    room: Int!
    disposalAt: Date
    depreciationAt: Date

    createdAt: DateTime
}

input EditItemInput {
    sealImage: Upload
    room: Int
    checkedAt: Date
    disposalAt: Date
    depreciationAt: Date
}

input PartItemInput {
    name: String
    room: Int
    checkedAt: Date

    # editPart query don't use `createdAt`
    createdAt: DateTime
}

enum ItemEnum {
    ONLY_DELETED,
    ALL,
    NORMAL,
}
